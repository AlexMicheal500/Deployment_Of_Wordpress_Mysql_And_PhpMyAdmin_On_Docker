stages:
    - build
    - push
    - deploy
variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    SERVER_USER: root
    SERVER_IP: 139.177.200.220
    USER_PASS: password
    MY_SQL_IMAGE: mysql:8.0.30
    WORDPRESS_IMAGE: gasnownow


build:
    stage: build    
    image: docker:20.10.13-alpine3.15
    services:
        - docker:20.10.13-dind-alpine3.15
    script:
        - echo "$(CI_JOB_STAGE)"
        - docker build -t gasnownow .
        - docker save gasnownow > gasnownow.tar
    artifacts:
        expire_in: 1 week
        paths:
            - gasnownow.tar


push:
    stage: push
    image: docker:20.10.13-alpine3.15
    services:
        - docker:20.10.13-dind-alpine3.15
    before_script:
     
        - 'command -v ssh-agent >/dev/null || ( apk update && apk add openssh-client )'

        ##
        ## Run ssh-agent (inside the build environment)
        ##
        - eval $(ssh-agent -s)

        ##
        ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
        ## We're using tr to fix line endings which makes ed25519 keys work
        ## without extra base64 encoding
        ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
        ##
        - chmod 600 $SSH_PRIVATE_KEY
        - ssh-add $SSH_PRIVATE_KEY

        ##
        ### Create the SSH directory and give it the right permissions
        ##
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh

    script:
        - scp -o StrictHostKeyChecking=no gasnownow.tar $SERVER_USER@$SERVER_IP:./
        - scp -o StrictHostKeyChecking=no gasnownow_lpg22.sql  $SERVER_USER@$SERVER_IP:./

deploy:
  #image: alpine
    stage: deploy
    image: docker:20.10.13-alpine3.15
    services:
        - docker:20.10.13-dind-alpine3.15
        - mysql:5.7
    before_script:
     
        - 'command -v ssh-agent >/dev/null || ( apk update && apk add openssh-client && apk add mysql-server )'

        ##
        ## Run ssh-agent (inside the build environment)
        ##
        - eval $(ssh-agent -s)

        ##
        ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
        ## We're using tr to fix line endings which makes ed25519 keys work
        ## without extra base64 encoding.
        ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
        ##
        - chmod 600 $SSH_PRIVATE_KEY
        - ssh-add $SSH_PRIVATE_KEY

        ##
        ## Create the SSH directory & give it the right permissions
        ##
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh

    script:
        ########################################################################################################################       
        #- ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rm -f gasnownowDBCont"
        #- ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rm -f gasnownow_web"
        #- ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker network rm gasnownow-network"
        #- ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rmi $MY_SQL_IMAGE"
        #- ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker rmi $WORDPRESS_IMAGE"
        ########################################################################################################################
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker load --input gasnownow.tar && sudo apt install mysql-server -y"
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker network create gasnownow-network"
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d --name gasnownow_web -p 8081:80 --network gasnownow-network -d $WORDPRESS_IMAGE"
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run --name gasnownowDBCont -d -p 3322:3322 -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=gasnownowDB --network gasnownow-network -d mysql:8.0.30" 
        #- ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "id=$(docker ps --no-trunc -aqf name=gasnownowDBCont)"
        #- ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker exec -i $(docker ps --no-trunc -aqf name=gasnownowDBCont) mysql -uroot -ppassword gasnownowDB < gasnownow_lpg22.sql"
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "sleep 8"
        - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker exec -i gasnownowDBCont  sh -c ' mysql -uroot -ppassword gasnownowDB' < gasnownow_lpg22.sql"




